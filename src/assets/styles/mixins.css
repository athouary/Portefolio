/**
*    Creating attributes (all, top bottom, left and right) for margin, padding, etc., in regards of the Grid Gutter Size
*    var $attr : the attribute to mixin ; example :  margin, padding
*    var $short : the atomic version of the attribute  ; example : m, p
*    var $sizeShort : the atomic version of the size to apply mixin ; example : xs, s, m, l
*    var $sizeVal : value to multiply with the Gutter Size
*/

@define-mixin createSize $attr, $short, $sizeShort, $sizeVal {
    .$(short)-$(sizeShort) {
        $(attr): $sizeVal;
    }

    .$(short)t-$(sizeShort) {
        $(attr)-top: $sizeVal;
    }

    .$(short)b-$(sizeShort) {
        $(attr)-bottom: $sizeVal;
    }

    .$(short)l-$(sizeShort) {
        $(attr)-left: $sizeVal;
    }

    .$(short)r-$(sizeShort) {
        $(attr)-right: $sizeVal;
    }

    .$(short)-h-$(sizeShort) {
        $(attr)-left: $sizeVal;
        $(attr)-right: $sizeVal;
    }

    .$(short)-v-$(sizeShort) {
        $(attr)-top: $sizeVal;
        $(attr)-bottom: $sizeVal;
    }
}

/**
*    Creating borders (all, top bottom, left and right)
*    var $size : the size of the border
*    var $color : the color of the border
*/

@define-mixin createBorder $size, $colorName, $color {
    .b-$(colorName) {
        border: $size solid $color;
    }

    .bt-$(colorName) {
        border-top: $size solid $color;
    }
    .bb-$(colorName) {
        border-bottom: $size solid $color;
    }
    .bl-$(colorName) {
        border-left: $size solid $color;
    }
    .br-$(colorName) {
        border-right: $size solid $color;
    }
}

/**
*    Creating borders-radiuses (all, top bottom, left and right)
*    var $sizeShort : the name of the size
*    var $sizeVal : the size of the radius
*/
@define-mixin createRadius $sizeShort, $sizeVal {
    .br-$(sizeShort) {
        border-radius: $sizeVal;
    }

    .btr-$(sizeShort) {
        border-top-right-radius: $sizeVal;
        border-top-left-radius: $sizeVal;
    }

    .bbr-$(sizeShort) {
        border-bottom-left-radius: $sizeVal;
        border-bottom-right-radius: $sizeVal;
    }

    .blr-$(sizeShort) {
        border-top-left-radius: $sizeVal;
        border-bottom-left-radius: $sizeVal;
    }

    .brr-$(sizeShort) {
        border-top-right-radius: $sizeVal;
        border-bottom-right-radius: $sizeVal;
    }

    .btlr-$(sizeShort) {
        border-top-left-radius: $sizeVal;
    }

    .btrr-$(sizeShort) {
        border-top-right-radius: $sizeVal;
    }

    .bbrr-$(sizeShort) {
        border-bottom-right-radius: $sizeVal;
    }

    .bblr-$(sizeShort) {
        border-bottom-left-radius: $sizeVal;
    }
}

/**
*    Creating borders (all, top bottom, left and right)
*    var $size : the size of the border
*    var $color : the color of the border
*/

@define-mixin createHover $name, $attr, $value {
    .$(name)-hover:hover,
    .$(name)-hover:active,
    .$(name)-hover:focus,
    .$(name)-active {
        $(attr): $value;
    }
}
